Семантическая разметка
======================

Паттерн *семантическая разметка* требует использовать HTML для описания смысла,
а~не~оформления страницы. Это сводится к~следующим четырем правилам:

=======================================[sidebyside]==========================================

<<< 1 >>> **Использовать теги по назначению:** заголовки размечать `<h1>` (а~не в~`<div class="header">`), код заключать в `<code>` (а~не в~`<span class="code">`), таблицы создавать с~помощью `<table>`.
  
-------------------------------------------[col]---------------------------------------------
<<< 2 >>> **Использовать теги *только* по~назначению:** `<h1>` только для заголовков (а~не~для «облаков тегов»), `<table>` только для настоящих таблиц (а~не для разметки страницы).

===========================================[row]=============================================
<<< 3 >>> **CSS-классы должны отражать смысл** конструкций, а~не их~внешний вид. Например, классы `header`, `menu-item`, `sidebar`, `citation`, `book-name`, `validation-error` использовать можно и~нужно, а~классы `float-right`, `bold`, `red`~— нельзя.

-------------------------------------------[col]---------------------------------------------
<<< 4 >>> **Не использовать «лишних» тегов,** в~частности, избегать бессмысленных `div`'ов.  Например, нельзя оборачивать куски страницы в `<div class="wrapper">`.

=======================================[/sidebyside]=========================================


Зачем?
------

Предположим, что мы достигли совершенного разделения структуры и~оформления. Тогда в~нашем распоряжении оказываются следующие преимущества:

*Совместимость и accessibility.* Если от~вашего сайта останется только голая HTML-страница (а~CSS-файл и~картинки исчезнут), он останется понятным и~удобным в~использовании (насколько это возможно в~такой ситуации). Причин для такого события множество: попадание в~веб-архив вроде [web.archive.org](http://web.archive.org/), просмотр в~текстовом браузере, посещение сайта с помощью синтезатора речи для слепых.

*Меньшие сущности проще понимать и поддерживать.* Если структура страницы и~её оформление сложны, то их разделение позволит вместо одной большой сущности (структура и~оформление вместе) мы получим два меньших, которые можно понимать и~изменять по~отдельности.

*Простота смены оформления.* Подключая разные CSS-файлы к~одному и~тому~же HTML-документу, можно разным посетителям легко показывать разные «темы».

*Совместная работа.* Людям проще работать вместе, если они правят разные файлы. Дизайнер может продолжать вылизывать таблицу стилей для разных браузеров, пока программисты наполняют HTML-страницы необходимым кодом или инструкциями языка шаблонов.

*Инструментальные средства.* Некоторые редакторы CSS позволяют на лету видеть эффект изменения CSS-файла, тогда как обновление HTML-кода веб-приложения требует перезагрузки страницы и~обращения к~серверу. Для некоторых технологий, особенно связанных с~Java, это включает перекомпилирование или перепубликацию и~занимает не~меньше десяти секунд.


Препятсвия
----------

*Одноразовое оформление.* Иногда хочется сказать «вот этот текст прям здесь я~хочу сдвинуть чуть правее». Чтобы вывести из этого семантические правила разметки, нужно задаться вопросом «почему я~хочу это сдвинуть?». Однако тратить время на~подобные вопросы из-за каждой мелочи нерационально. Кроме того, подобные «разовые» правила будут захломлять CSS-файл.

*Сложность понимания при неудачном разделении.* Если по CSS-файлу не ясно, как используются его правила, то вместо разделения сущностей может наблюдаться размазывание одной сущности по двум файлам, затрудняя понимание вместо того, чтобы упрощать.

*Усложнение CSS-кода.* По смысловым соображениям теги в~HTML-файле могут оказаться не~в~том порядке, который был~бы удобен для автора CSS. Аналогично, добавление несмысловых `<div>`'ов иногда может существенно упростить реализацию задуманного дизайна средствами CSS, а~их отсутствие приводить к~непонятному CSS-коду (или даже невозможности реализовать задуманное).


Указания
--------

Следует понимать, что семантическая разметка~— не самоцель, а~инструмент достижения описанных выше положительных эффектов. В~тех местах, где семантическая разметка начинает противоречить своей задаче, её~применение необходимо ограничить.

«Здесь нужно написать про случаи из практики, когда требуются дополнительные теги.»

